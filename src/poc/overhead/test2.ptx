//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21124049
// Cuda compilation tools, release 8.0, V8.0.44
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_35
.address_size 64

	// .weak	cudaMalloc
.extern .func  (.param .b64 func_retval0) cudaGetParameterBufferV2
(
	.param .b64 cudaGetParameterBufferV2_param_0,
	.param .align 4 .b8 cudaGetParameterBufferV2_param_1[12],
	.param .align 4 .b8 cudaGetParameterBufferV2_param_2[12],
	.param .b32 cudaGetParameterBufferV2_param_3
)
;
.extern .func  (.param .b32 func_retval0) cudaLaunchDeviceV2
(
	.param .b64 cudaLaunchDeviceV2_param_0,
	.param .b64 cudaLaunchDeviceV2_param_1
)
;

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z5gloobv
.visible .entry _Z5gloobv(

)
{



	ret;
}

	// .globl	_Z4globv
.visible .entry _Z4globv(

)
{
	.local .align 8 .b8 	__local_depot7[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<5>;


	mov.u64 	%rd4, __local_depot7;
	cvta.local.u64 	%SP, %rd4;
	mov.u32 	%r1, %ctaid.x;
	setp.eq.s32	%p4, %r1, 0;
	mov.pred 	%p9, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB7_2;
	bra.uni 	BB7_1;

BB7_1:
	mov.u32 	%r2, %tid.x;
	setp.eq.s32	%p9, %r2, 0;

BB7_2:
	not.pred 	%p6, %p9;
	@%p6 bra 	BB7_7;
	bra.uni 	BB7_3;

BB7_3:
	mov.u32 	%r3, 13;
	st.u32 	[%SP+0], %r3;
	mov.u32 	%r4, 1;
	st.u32 	[%SP+4], %r4;
	st.u32 	[%SP+8], %r4;
	ld.u32 	%r5, [%SP+8];
	ld.u32 	%r6, [%SP+4];
	ld.u32 	%r7, [%SP+0];
	mov.u32 	%r8, 128;
	st.u32 	[%SP+16], %r8;
	st.u32 	[%SP+20], %r4;
	st.u32 	[%SP+24], %r4;
	ld.u32 	%r9, [%SP+24];
	ld.u32 	%r10, [%SP+20];
	ld.u32 	%r11, [%SP+16];
	mov.u64 	%rd2, _Z5gloobv;
	mov.u32 	%r12, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .align 4 .b8 param1[12];
	st.param.b32	[param1+0], %r7;
	st.param.b32	[param1+4], %r6;
	st.param.b32	[param1+8], %r5;
	.param .align 4 .b8 param2[12];
	st.param.b32	[param2+0], %r11;
	st.param.b32	[param2+4], %r10;
	st.param.b32	[param2+8], %r9;
	.param .b32 param3;
	st.param.b32	[param3+0], %r12;
	.param .b64 retval0;
	call.uni (retval0), 
	cudaGetParameterBufferV2, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.ne.s64	%p7, %rd1, 0;
	not.pred 	%p8, %p7;
	@%p8 bra 	BB7_5;
	bra.uni 	BB7_4;

BB7_4:
	mov.u64 	%rd3, 0;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	cudaLaunchDeviceV2, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 1
	bra.uni 	BB7_6;

BB7_5:

BB7_6:

BB7_7:
	ret;
}


